// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230305170139_ExampleSeedAdded")]
    partial class ExampleSeedAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("API.Entity.AircraftType", b =>
                {
                    b.Property<int>("AircraftTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("hasUnitLoadOption")
                        .HasColumnType("INTEGER");

                    b.HasKey("AircraftTypeId");

                    b.ToTable("AircraftTypes");

                    b.HasData(
                        new
                        {
                            AircraftTypeId = 1,
                            Name = "Boeing737",
                            hasUnitLoadOption = true
                        },
                        new
                        {
                            AircraftTypeId = 2,
                            Name = "Boeing737",
                            hasUnitLoadOption = false
                        },
                        new
                        {
                            AircraftTypeId = 3,
                            Name = "AirbusA320",
                            hasUnitLoadOption = true
                        },
                        new
                        {
                            AircraftTypeId = 4,
                            Name = "AirbusA320",
                            hasUnitLoadOption = false
                        },
                        new
                        {
                            AircraftTypeId = 5,
                            Name = "AirbusA330",
                            hasUnitLoadOption = true
                        },
                        new
                        {
                            AircraftTypeId = 6,
                            Name = "ATR-72",
                            hasUnitLoadOption = false
                        });
                });

            modelBuilder.Entity("API.Entity.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AircraftTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FlightId");

                    b.HasIndex("AircraftTypeId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightId = 1,
                            AircraftTypeId = 2,
                            Arrival = new DateTime(2023, 2, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2023, 2, 14, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            Destination = "EDDH",
                            FlightNo = "EZY2023"
                        },
                        new
                        {
                            FlightId = 2,
                            AircraftTypeId = 5,
                            Arrival = new DateTime(2023, 2, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2023, 2, 14, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Destination = "EDDM",
                            FlightNo = "LH2134"
                        },
                        new
                        {
                            FlightId = 3,
                            AircraftTypeId = 2,
                            Arrival = new DateTime(2023, 2, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Departure = new DateTime(2023, 2, 14, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Destination = "EDDB",
                            FlightNo = "LH789"
                        });
                });

            modelBuilder.Entity("API.Entity.GroundVehicle", b =>
                {
                    b.Property<int>("GroundVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsIdling")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GroundVehicleId");

                    b.HasIndex("PositionId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("GroundVehicles");

                    b.HasData(
                        new
                        {
                            GroundVehicleId = 1,
                            IsIdling = true,
                            Name = "Gepäckband1",
                            PositionId = 15,
                            VehicleTypeId = 5
                        },
                        new
                        {
                            GroundVehicleId = 2,
                            IsIdling = true,
                            Name = "Gepäckband2",
                            PositionId = 15,
                            VehicleTypeId = 5
                        },
                        new
                        {
                            GroundVehicleId = 3,
                            IsIdling = true,
                            Name = "Gepäckband3",
                            PositionId = 15,
                            VehicleTypeId = 5
                        },
                        new
                        {
                            GroundVehicleId = 4,
                            IsIdling = true,
                            Name = "Gepäckzug á 4 Wägen",
                            PositionId = 15,
                            VehicleTypeId = 11
                        },
                        new
                        {
                            GroundVehicleId = 5,
                            IsIdling = true,
                            Name = "Gepäckzug á 4 Wägen",
                            PositionId = 15,
                            VehicleTypeId = 11
                        },
                        new
                        {
                            GroundVehicleId = 6,
                            IsIdling = true,
                            Name = "Gepäckzug á 4 Wägen",
                            PositionId = 15,
                            VehicleTypeId = 11
                        },
                        new
                        {
                            GroundVehicleId = 7,
                            IsIdling = true,
                            Name = "Gepäckzug á 4 Wägen",
                            PositionId = 15,
                            VehicleTypeId = 11
                        },
                        new
                        {
                            GroundVehicleId = 8,
                            IsIdling = true,
                            Name = "Puck-Back Fahrzeug klein",
                            PositionId = 17,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            GroundVehicleId = 9,
                            IsIdling = true,
                            Name = "Puck-Back Fahrzeug groß",
                            PositionId = 17,
                            VehicleTypeId = 1
                        },
                        new
                        {
                            GroundVehicleId = 10,
                            IsIdling = true,
                            Name = "Flugzeugtreppe klein",
                            PositionId = 17,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            GroundVehicleId = 11,
                            IsIdling = true,
                            Name = "Flugzeugtreppe mittel",
                            PositionId = 17,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            GroundVehicleId = 12,
                            IsIdling = true,
                            Name = "Flugzeugtreppe mittel",
                            PositionId = 17,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            GroundVehicleId = 13,
                            IsIdling = true,
                            Name = "Flugzeugtreppe groß",
                            PositionId = 17,
                            VehicleTypeId = 3
                        },
                        new
                        {
                            GroundVehicleId = 14,
                            IsIdling = true,
                            Name = "Bus 1",
                            PositionId = 17,
                            VehicleTypeId = 4
                        },
                        new
                        {
                            GroundVehicleId = 15,
                            IsIdling = true,
                            Name = "Containerzug á 4 Wägen",
                            PositionId = 17,
                            VehicleTypeId = 11
                        },
                        new
                        {
                            GroundVehicleId = 16,
                            IsIdling = true,
                            Name = "Containerzug á 4 Wägen",
                            PositionId = 17,
                            VehicleTypeId = 11
                        },
                        new
                        {
                            GroundVehicleId = 17,
                            IsIdling = true,
                            Name = "Frischwasserfahrzeug",
                            PositionId = 17,
                            VehicleTypeId = 7
                        },
                        new
                        {
                            GroundVehicleId = 18,
                            IsIdling = true,
                            Name = "Entsorgungsfahrzeug",
                            PositionId = 17,
                            VehicleTypeId = 8
                        },
                        new
                        {
                            GroundVehicleId = 19,
                            IsIdling = true,
                            Name = "Tank LKW1 JETA1 ",
                            PositionId = 18,
                            VehicleTypeId = 9
                        },
                        new
                        {
                            GroundVehicleId = 20,
                            IsIdling = true,
                            Name = "Tank LKW2 JETA1",
                            PositionId = 18,
                            VehicleTypeId = 9
                        },
                        new
                        {
                            GroundVehicleId = 21,
                            IsIdling = true,
                            Name = "Tank LKW3 Avgas",
                            PositionId = 18,
                            VehicleTypeId = 9
                        },
                        new
                        {
                            GroundVehicleId = 22,
                            IsIdling = true,
                            Name = "GPU 1",
                            PositionId = 17,
                            VehicleTypeId = 10
                        },
                        new
                        {
                            GroundVehicleId = 23,
                            IsIdling = true,
                            Name = "GPU 2",
                            PositionId = 17,
                            VehicleTypeId = 10
                        },
                        new
                        {
                            GroundVehicleId = 24,
                            IsIdling = true,
                            Name = "GPU 2",
                            PositionId = 17,
                            VehicleTypeId = 10
                        },
                        new
                        {
                            GroundVehicleId = 25,
                            IsIdling = true,
                            Name = "High-Loader",
                            PositionId = 17,
                            VehicleTypeId = 6
                        });
                });

            modelBuilder.Entity("API.Entity.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndOfService")
                        .HasColumnType("TEXT");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QtyFuel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartOfService")
                        .HasColumnType("TEXT");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("FlightId");

                    b.HasIndex("PositionId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            EndOfService = new DateTime(2023, 2, 14, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 5
                        },
                        new
                        {
                            OrderId = 2,
                            EndOfService = new DateTime(2023, 2, 14, 12, 35, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 10, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 5
                        },
                        new
                        {
                            OrderId = 3,
                            EndOfService = new DateTime(2023, 2, 14, 12, 35, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 11
                        },
                        new
                        {
                            OrderId = 4,
                            EndOfService = new DateTime(2023, 2, 14, 12, 35, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 11
                        },
                        new
                        {
                            OrderId = 5,
                            EndOfService = new DateTime(2023, 2, 14, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 20, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 7
                        },
                        new
                        {
                            OrderId = 6,
                            EndOfService = new DateTime(2023, 2, 14, 12, 15, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 8
                        },
                        new
                        {
                            OrderId = 7,
                            EndOfService = new DateTime(2023, 2, 14, 12, 35, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 3
                        },
                        new
                        {
                            OrderId = 8,
                            EndOfService = new DateTime(2023, 2, 14, 12, 18, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 12000,
                            StartOfService = new DateTime(2023, 2, 14, 12, 3, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 9
                        },
                        new
                        {
                            OrderId = 9,
                            EndOfService = new DateTime(2023, 2, 14, 12, 50, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 1,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 12, 42, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 1
                        },
                        new
                        {
                            OrderId = 10,
                            EndOfService = new DateTime(2023, 2, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 6
                        },
                        new
                        {
                            OrderId = 11,
                            EndOfService = new DateTime(2023, 2, 14, 15, 5, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 3
                        },
                        new
                        {
                            OrderId = 12,
                            EndOfService = new DateTime(2023, 2, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 11
                        },
                        new
                        {
                            OrderId = 13,
                            EndOfService = new DateTime(2023, 2, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 11
                        },
                        new
                        {
                            OrderId = 14,
                            EndOfService = new DateTime(2023, 2, 14, 14, 40, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 25, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 7
                        },
                        new
                        {
                            OrderId = 15,
                            EndOfService = new DateTime(2023, 2, 14, 12, 25, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 5, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 8
                        },
                        new
                        {
                            OrderId = 16,
                            EndOfService = new DateTime(2023, 2, 14, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 3
                        },
                        new
                        {
                            OrderId = 17,
                            EndOfService = new DateTime(2023, 2, 14, 14, 20, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 30000,
                            StartOfService = new DateTime(2023, 2, 14, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 9
                        },
                        new
                        {
                            OrderId = 18,
                            EndOfService = new DateTime(2023, 2, 14, 15, 5, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 2,
                            PositionId = 11,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 5, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 4
                        },
                        new
                        {
                            OrderId = 19,
                            EndOfService = new DateTime(2023, 2, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 5
                        },
                        new
                        {
                            OrderId = 20,
                            EndOfService = new DateTime(2023, 2, 14, 15, 5, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 40, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 5
                        },
                        new
                        {
                            OrderId = 21,
                            EndOfService = new DateTime(2023, 2, 14, 15, 5, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 11
                        },
                        new
                        {
                            OrderId = 22,
                            EndOfService = new DateTime(2023, 2, 14, 15, 5, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 38, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 11
                        },
                        new
                        {
                            OrderId = 23,
                            EndOfService = new DateTime(2023, 2, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 50, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 7
                        },
                        new
                        {
                            OrderId = 24,
                            EndOfService = new DateTime(2023, 2, 14, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 32, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 8
                        },
                        new
                        {
                            OrderId = 25,
                            EndOfService = new DateTime(2023, 2, 14, 14, 5, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 14, 35, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 3
                        },
                        new
                        {
                            OrderId = 26,
                            EndOfService = new DateTime(2023, 2, 14, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 15000,
                            StartOfService = new DateTime(2023, 2, 14, 14, 32, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 9
                        },
                        new
                        {
                            OrderId = 27,
                            EndOfService = new DateTime(2023, 2, 14, 15, 10, 0, 0, DateTimeKind.Unspecified),
                            FlightId = 3,
                            PositionId = 3,
                            QtyFuel = 0,
                            StartOfService = new DateTime(2023, 2, 14, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            VehicleTypeId = 9
                        });
                });

            modelBuilder.Entity("API.Entity.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            IsGate = false,
                            Name = "62"
                        },
                        new
                        {
                            PositionId = 2,
                            IsGate = true,
                            Name = "61"
                        },
                        new
                        {
                            PositionId = 3,
                            IsGate = true,
                            Name = "51"
                        },
                        new
                        {
                            PositionId = 4,
                            IsGate = false,
                            Name = "41"
                        },
                        new
                        {
                            PositionId = 5,
                            IsGate = false,
                            Name = "42"
                        },
                        new
                        {
                            PositionId = 6,
                            IsGate = false,
                            Name = "43"
                        },
                        new
                        {
                            PositionId = 7,
                            IsGate = false,
                            Name = "44"
                        },
                        new
                        {
                            PositionId = 8,
                            IsGate = false,
                            Name = "31"
                        },
                        new
                        {
                            PositionId = 9,
                            IsGate = false,
                            Name = "32"
                        },
                        new
                        {
                            PositionId = 10,
                            IsGate = false,
                            Name = "33"
                        },
                        new
                        {
                            PositionId = 11,
                            IsGate = false,
                            Name = "21"
                        },
                        new
                        {
                            PositionId = 12,
                            IsGate = false,
                            Name = "22"
                        },
                        new
                        {
                            PositionId = 13,
                            IsGate = false,
                            Name = "23"
                        },
                        new
                        {
                            PositionId = 14,
                            IsGate = false,
                            Name = "24"
                        },
                        new
                        {
                            PositionId = 15,
                            IsGate = false,
                            Name = "Ground Vehicle Parking"
                        },
                        new
                        {
                            PositionId = 16,
                            IsGate = false,
                            Name = "Ground Vehicle Maintainance"
                        },
                        new
                        {
                            PositionId = 17,
                            IsGate = false,
                            Name = "Maschinenhalle Ost"
                        },
                        new
                        {
                            PositionId = 18,
                            IsGate = false,
                            Name = "Tanklager West"
                        });
                });

            modelBuilder.Entity("API.Entity.VehicleSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroundVehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleId");

                    b.HasIndex("GroundVehicleId");

                    b.HasIndex("OrderId");

                    b.ToTable("VehicleSchedules");
                });

            modelBuilder.Entity("API.Entity.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleTypes");

                    b.HasData(
                        new
                        {
                            VehicleTypeId = 1,
                            Type = "Pushback tug"
                        },
                        new
                        {
                            VehicleTypeId = 2,
                            Type = "Catering truck"
                        },
                        new
                        {
                            VehicleTypeId = 3,
                            Type = "Airstairs"
                        },
                        new
                        {
                            VehicleTypeId = 4,
                            Type = "Apron bus"
                        },
                        new
                        {
                            VehicleTypeId = 5,
                            Type = "Belt loader"
                        },
                        new
                        {
                            VehicleTypeId = 6,
                            Type = "Container loader"
                        },
                        new
                        {
                            VehicleTypeId = 7,
                            Type = "Water truck"
                        },
                        new
                        {
                            VehicleTypeId = 8,
                            Type = "Lavatory-service vehicle"
                        },
                        new
                        {
                            VehicleTypeId = 9,
                            Type = "Refueling truck"
                        },
                        new
                        {
                            VehicleTypeId = 10,
                            Type = "Ground power unit"
                        },
                        new
                        {
                            VehicleTypeId = 11,
                            Type = "Luggage/container truck"
                        });
                });

            modelBuilder.Entity("API.Entity.Flight", b =>
                {
                    b.HasOne("API.Entity.AircraftType", "AircraftType")
                        .WithMany()
                        .HasForeignKey("AircraftTypeId");

                    b.Navigation("AircraftType");
                });

            modelBuilder.Entity("API.Entity.GroundVehicle", b =>
                {
                    b.HasOne("API.Entity.Position", "Position")
                        .WithMany("GroundVehicles")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entity.VehicleType", "VehicleType")
                        .WithMany("GroundVehicles")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("API.Entity.Order", b =>
                {
                    b.HasOne("API.Entity.Flight", "Flight")
                        .WithMany("Orders")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entity.Position", "Position")
                        .WithMany("Orders")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entity.VehicleType", "VehicleType")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Position");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("API.Entity.VehicleSchedule", b =>
                {
                    b.HasOne("API.Entity.GroundVehicle", "GroundVehicle")
                        .WithMany("VehicleSchedules")
                        .HasForeignKey("GroundVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entity.Order", "Order")
                        .WithMany("VehicleSchedules")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroundVehicle");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("API.Entity.Flight", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("API.Entity.GroundVehicle", b =>
                {
                    b.Navigation("VehicleSchedules");
                });

            modelBuilder.Entity("API.Entity.Order", b =>
                {
                    b.Navigation("VehicleSchedules");
                });

            modelBuilder.Entity("API.Entity.Position", b =>
                {
                    b.Navigation("GroundVehicles");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("API.Entity.VehicleType", b =>
                {
                    b.Navigation("GroundVehicles");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
